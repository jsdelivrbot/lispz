### spec: Annotations
  In this context, annotations are comments in source files that can be processed
  by an external system for processing outside normal compilation and running.
  
  An annotation is a line containing **##<span>#</span> type: ** followed by
  lines of text ending in ###. Annotation processors use a 
  type to define which annotations they retrieve. They then receive a list of
  objects with _title_ and _body_ elements.
  
      (describe "(annotations.retrieve \"spec\" source-code)" (=>
        (using [annotations]
          (it "retrieves a list {title: \"..\" body: \"..\"}" (=>
            (var source window.lispz_modules.annotations)
            (var list (annotations.retrieve "spec" source)
            (expect list.length).toBeGreaterThan(0)
            (var annotation (first list))
            (expect annotation.title).toBe("Annotations")
            (expect annotation.body.length).toBeGreaterThan(100)
          ))
        )
      ))
###
  (var retrieve (lambda [type source]
    (var re (new RegExp (+ "###\\s*" type ":\\s*(.*)\\n((?:.|\\n)*?)###") "g"))
    (var annotations [[]])
    (var scan (=>
      (var res (re.exec source))
      (return? (not res))
      (annotations.push {title: (get res 1)  body: (get res 2)})
      (scan)
    ))(scan)
    (return annotations)
  ))
  (export {retrieve})
