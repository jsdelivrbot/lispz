### ref: (compilers.add source-type dest-type compiler)
  e.g. (compilers.add "less" "css" (promise.callback [src filename]
         (less.render src { filename } (lambda [err output]
           (callback err ((or output {}).css))
         ))
       ))
###
(ref add (lambda [ext-src ext-target compile]
  (ref annotated (stateful.morph! compile {
    ext: { src: ext-src target: ext-target }
  }))
  (compilers.update! ext-src annotated)
  (compilers.update! (+ "text/" ext-src) annotated)
))

### ref: (compilers.run js)
  e.g. (compilers.run (compilers.lispz.compile source))
###
(ref run (lambda [js] ((new Function js))))

(ref compilers (stateful { run add }))

(add "lispz" "js" (lambda [source name]
    (lispz.compile (+ source "\n") name)
))
(add "js" "js" (lambda [source name]
  (+ source "\n//# sourceURL=" name "\n")
))
(export compilers)
