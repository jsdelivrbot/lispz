### ref: (compilers.add source-type dest-type compiler)
  e.g. (compilers.add "less" "css" (promise.callback [src filename]
         (less.render src { filename } (lambda [err output]
           (callback err ((or output {}).css))
         ))
       ))
###
(ref add (lambda [source-type ext compile]
  (compilers.update! source-type { ext compile })
))

### ref: (compilers.run js)
  e.g. (compilers.run (compilers.lispz.compile source))
###
(ref run (lambda [js] ((new Function js))))

(ref lispz-compiler { compile: (lambda [source name]
    (lispz.compile (+ source "\n") name)
) ext: "js" })

(ref js-compiler { compile: (lambda [source name]
  (+ source "\n//# sourceURL=" name "\n")
) ext: "js"})

(ref compilers (stateful {
  run add

  lispz:              lispz-compiler
  "text/lispz":       lispz-compiler
  javascript:         js-compiler
  "text/javascript":  js-compiler
}))
(export compilers)
