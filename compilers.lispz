### ref: (compilers.add source-type dest-type compiler)
  e.g. (compilers.add "less" "css" (promise.callback [src filename]
         (less.render src { filename } (lambda [err output]
           (callback err ((or output {}).css))
         ))
       ))
###
(ref add (lambda [source-type ext compile]
  (compilers.update! source-type { ext compile })
))

### ref: (ref js-promise (compilers.source-type.compile source file-name))
  e.g. (when (compilers.lispz.compile "(debug \"Hi\")" "test")) [js] ...)
###
(using [log_execution_context]
  ### ref: (compilers.run js)
    e.g. (compilers.run (compilers.lispz.compile source))
  ###
  (ref run (lambda [js]
    (log_execution_context.clear)
    ((new Function js))
  ))

  (ref compilers (stateful {
    run add

    lispz: { compile: (lambda [source name]
      (lispz.compile (+ source "\n") name)
    ) ext: "js" }
  }))
  (export compilers)
)
