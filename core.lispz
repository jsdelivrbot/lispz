### example: {a b c : (+ 3 2)} ###
(macro '{'  (list) (.dict *list))

### example: (var a 3 b 5 c (+3 2)) ###
(macro var  (list) (.pairs *list 'var ' '=' ';'))

### example: (set! a 3 b 5 c (+ 3 2)) ###
(macro set! (list) (.pairs *list ' '    '=' ' '))

### example: (attribute b of {a 1 b 2}) ###
(macro attribute (key of dict) (.js dict '[' key ']'))

### example: Nicer words for some esoteric javascript/java symbols ###
(alias and &&  or ||  is ==  isnt !=  not !)

### Export is like return - for functions and modules ###
(macro export (data) (.js 'return ' data ';'))

### module import ###
(macro requires (modules on_ready) (lispz.load modules
  (lambda () (.requires modules) **on_ready)))
