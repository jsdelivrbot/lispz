(using  [net list github dict]
  (var compile (lambda [html to-js] (return (riot.compile html to-js))))

  (var tags {})

  (var load (lambda [name uri next-step=>]
    (var mount (=>
      (dict.update! tags name true)
      (dict.update! tags uri true)
      (riot.mount name)
      (next-step=>)
    ))
    (cond
      (get tags name)       (next-step=>)
      (get lispz.tags name) (do ((get lispz.tags name)) (mount))
      (else)                (net.http-get uri (lambda [response]
                              (compile response.text) (mount)))
    )
  ))

  (var build (lambda [target-repo built=>]
    (github.build target-repo "riot" [[
      {repo: "riot/riot" files: [[
        {include: '/^riot\+compiler.js$/'}
      ]]}
    ]] built=>)
  ))

  (var mount (lambda [tags] (riot.mount tags)))

  (net.script "ext/riot.js" (=>
    (return-if (not window.riot) (export {build}))
    (set! riot.parsers.js.lispz
      (lambda [source] (return ((lispz.compile "riot-tags" source).join "\n"))))
    (list.sequential (document.getElementsByClassName "riot")
      (lambda [element next-element=>]
        (var name element.tagName)
        (var uri (or (element.getAttribute "uri")
                     (+ (name.toLowerCase) ".riot.html")))
        (load name uri next-element=>)
      )
      (=> (export {build compile load mount}))
    )
  ))
)
