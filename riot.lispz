(using  [net list github]
  (var compile (lambda [html] (return (riot.compile html))))

  (var cache {})

  (var load (lambda [name uri next-step=>]
    (return-if (or (get cache name) (get cache uri)) (next-step=>))
    (net.http-get uri (lambda [response]
      (compile response.text)
      (riot.mount name)
      (next-step=>)
    ))
  ))

  (var build (lambda [target-repo built=>]
    (github.build target-repo "riot" [[
      {repo: "riot/riot" files: [[
        {include: '/^riot\+compiler.js$/'}
      ]]}
    ]] built=>)
  ))

  (var mount (lambda [tags] (riot.mount tags)))

  (net.script "ext/riot.js" (=>
    (return-if (not window.riot) (export {build}))
    (set! riot.parsers.js.lispz
      (lambda [source] (return ((lispz.compile "riot-tags" source).join "\n"))))
    (list.sequential (document.getElementsByClassName "riot")
      (lambda [element next-element=>]
        (var name element.tagName)
        (var uri (or (element.getAttribute "uri")
                     (+ (name.toLowerCase) ".riot.html")))
        (load name uri next-element=>)
      )
      (=> (export {build compile load mount}))
    )
  ))
)
