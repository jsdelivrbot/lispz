(using  "net"
  (var compile (lambda [html] (return (riot.compile html))))

  (var cache {})

  (var load (lambda [name uri next-step=>]
    (return? (or (get cache name) (get cache uri)) (next-step=>))
    (net.http-get uri (lambda [response]
      (compile response.text)
      (riot.mount name)
      (next-step=>)
    ))
  ))
  
  (var mount (lambda [tags] (riot.mount tags)))

  ### Load RIOT from the CDN and continue normally once all is done ###
  (net.cdnjs-load "riot" [['/riot\.js$|\.min.js$/']] (=>
    (set! riot.parsers.js.lispz
      (lambda [source] (return ((lispz.compile "riot-tags" source).join "\n"))))
    (sequential (document.getElementsByClassName "riot")
      (lambda [element next-element=>]
        (var name element.tagName)
        (var uri (element.getAttribute "uri"))
        (cond (not uri) (set! uri (+ (name.toLowerCase) ".riot.html")))
        (load name uri next-element=>)
      )
      (=> (export {compile load mount}))
    )
  ))
)
